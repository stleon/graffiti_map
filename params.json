{"name":"Graffiti map","tagline":"Карта граффити","body":"#graffiti_map\r\n\r\n##Основная идея\r\nВы можете размещать фото граффити на карте и добавлять к этому фото географические координаты. Также есть карта со всеми граффити, которые добавили другие люди.\r\n\r\nПроще говоря, **graffiti_map** - это:\r\n\r\n- Способ самовыражения\r\n- Энциклопедия местного стритарта\r\n- Живой город\r\n- Идеи, эмоции\r\n- Маршруты прогулок (для туристов тоже)\r\n\r\nПриложение создано при поддержке [Теплицы социальных технологий](http://te-st.ru). На хакатоне «Делай Город» проекту было присуждено первое место - [анонс](http://te-st.ru/2015/06/02/make-city-hackathon-results/).\r\n\r\nНа данный момент ведется активная разработка, **graffiti_map** будет интегрирована с [Партизанинг](http://partizaning.org) (cайт об уличном искусстве, городе и человеческих взаимодействиях).\r\n\r\n##Демо\r\n\r\nВидео\r\n\r\nБольше роликов на нашей странице\r\n\r\n##Запросы к API\r\n\r\nДанные **graffiti_map** могут быть использованы абсолютно всеми. Они нужны, например, для генерации карт или сбора любой другой стастики.\r\n\r\n###Общая информация\r\n\r\n- В ответе получаете **JSON**\r\n- Разрешено 10 запросов в минуту\r\n\r\n###Условные обозначения\r\n\r\n- `req_to_server` - запрос от клиента к серверу\r\n- `res_to_client` - ответ от сервера клиенту\r\n\r\n###Техническая информация\r\n\r\nДля использования **API** следует использовать соединение по **http** протоколу по адресу:\r\n\r\n```\r\nhttp://site.ru/api/\r\n```\r\n\r\n###Описание методов API\r\n\r\n####api\r\n\r\nВозвращает список методов для работы с данными **graffiti_map**:\r\n\r\n```\r\n//req_to_server\r\n\r\nGET http://site.ru/api/\r\n\r\n//res_to_client\r\n{\r\n    \"graffities\": \"http://site.ru/api/graffities/\"\r\n}\r\n```\r\n\r\n####graffities\r\n\r\nВозвращает список граффити, на данный момент без **pagination**:\r\n\r\n```\r\n//req_to_server\r\n\r\nGET http://site.ru/api/graffities/\r\n\r\n//res_to_client\r\n[\r\n    {\r\n        \"id\": 1,\r\n        \"photo\": \"http://site.ru/datastore/users_img/6dae1362-11d5-4c7e-95a4-ed59a6297804.jpg\",\r\n        \"name\": \"Test name\",\r\n        \"comment\": \"Test comment\",\r\n        \"lat\": 55.739701,\r\n        \"lon\": 37.664635,\r\n        \"graffiti_type\": \"gr\",\r\n        \"date_created\": \"2015-06-28T15:24:35.869411Z\",\r\n        \"date_updated\": \"2015-06-28T15:24:35.869528Z\"\r\n    }\r\n]\r\n```\r\n\r\n##Sitemap\r\n\r\nКарта сайта (нужна для поисковиков) генерируется автоматически и доступна по адресу `/sitemap.xml`.\r\n\r\nИспользуется [индексный файл sitemap](http://www.sitemaps.org/ru/protocol.html#index).\r\n\r\n##Участие в разработке\r\n\r\nЧтобы ваш **pull request** был принят, нужно чтобы он соответствовал следующим правилам:\r\n\r\n- Прежде чем приступать к работе, ее надо обсудить\r\n- Каждый патч должен делать одно логическое изменение\r\n- Код должен быть оформлен по PEP 8. 4 пробела, а не табы\r\n- Код должен тестироваться. 100% покрытие не нужно, но лениться тоже не надо\r\n\r\n##Что дальше\r\n\r\nНам очень нужен грамотный **Front-end Developer**!\r\n\r\nBootstrap - это хорошо, но я ниразу не дизайнер, так что если кто захочет нарисовать крутой дизайн, сверстайте его, пожалуйста.\r\n\r\n##Инструкции по локальному запуску\r\n\r\nНиже описаны действия для людей, которые не знают о **git clone** и т.д.\r\n\r\nЕсли вы захотели потестрировать у себя дома, то вот последовательность действий (для версий выше **0.0.1**):\r\n\r\n- Установаем [Python](https://www.python.org/downloads/), не ниже версии 3.4.3\r\n- Устанавливаем [Redis](http://redis.io) и настраиваем **conf**-файл, в зависимости от своей машины и предпочтений. Запускаем **Redis** командой `redis-server ~/redis.conf`, где **~/redis.conf** - пример пути до файла конфигурации.\r\n- Скачиваем последнюю версию **graffiti_map**. [Стабильная](https://github.com/stleon/graffiti_map/archive/master.zip). Или выбираете интересующую вас ветку из [списка](https://github.com/stleon/graffiti_map/branches), щелкаете на нее и жмете **Clone in Desktop** или **Download ZIP** (не забудьте разархивировать)\r\n- Далее, в зависимости от того, что вы будете использовать - .bashrc, .bash_profile, .profile или [venv](https://docs.python.org/3/library/venv.html), надо сохранить системные переменные.\r\n\r\nЕсли используете последний вариант, то в терминале/командной строке переходите в директорию проекта:\r\n\r\n```\r\ncd Downloads/graffiti_map // мой вариант, у вас может отличаться\r\npyvenv env\r\n```\r\n\r\nВсе дальнейшие действия делаются именно в терминале/командной строке из папки проекта.\r\n\r\nДобавляем системные переменные в  **env/bin/activate** (не забываем записать свои значения):\r\n\r\n```\r\nexport SECRET_KEY=key\r\nexport DB_NAME=name\r\nexport DB_USER=user\r\nexport DB_PASSWORD=pass\r\nexport DB_HOST=host\r\nexport DB_PORT=port\r\nexport RECAPTCHA_PUBLIC_KEY=key\r\nexport RECAPTCHA_PRIVATE_KEY=key\r\nexport MANDRILL_API_KEY=key\r\nexport ADMIN_URL='url'\r\nexport THUMBNAIL_REDIS_HOST=host\r\nexport THUMBNAIL_REDIS_PORT=port\r\nexport THUMBNAIL_REDIS_DB=0-16\r\nexport THUMBNAIL_REDIS_PASSWORD=pass\r\nexport SESSION_REDIS_HOST=host\r\nexport SESSION_REDIS_PORT=port\r\nexport SESSION_REDIS_DB=0-16\r\nexport SESSION_REDIS_PASSWORD=pass\r\nexport SESSION_REDIS_PREFIX=prefix\r\nexport SERVER_IP=ip\r\n```\r\n- надо создать свой **redis.conf**\r\n- Активируем виртуальное окружение `source env/bin/activate`\r\n- Выполняем `pip install -r requirements.txt`\r\n- После этого надо выполнить `python manage.py migrate`, `python manage.py createsuperuser`\r\n- Открываем файл **settings.py** и проверяем **DEBUG = True**\r\n- Если во всех пунктах ошибок не возникло, то `python manage.py runserver`\r\n- Читаете внимательно лог, скорее всего в браузере ресурс будет доступен по адресу `http://127.0.0.1:8000`\r\n\r\nНа каждой платформе могут быть свои специфические ситуации, если что-то не завелось, гуглите, а если не помогло, пишите в [Issues](https://github.com/stleon/graffiti_map/issues).\r\n\r\n##Рекомендации по установке на production\r\n\r\nПо поводу деплоя - это отдельная тема, и обязателен к прочтению весь раздел [Deploying Django](https://docs.djangoproject.com/en/1.8/howto/deployment/).\r\n\r\nРекомендуется использовать **uWSGI** + **nginx-full**, не забываем правильно настроить фаервол.\r\n\r\nВо всем остальном инструкции одинаковые с локальным запуском, желательно установить **git** на сервер и, например, **redis** запускать в качестве демона.\r\n\r\nВы можете разместить все на одном сервере, или использовать несколько серверов. На данный момент нагрузка на проект небольшая, поэтому сейчас не используются распределенные асинхронные очереди заданий, однако, их можно было бы использовать, например, при загрузке и обработке изображений.\r\n\r\nПоэтому при выборе технологий, инстансов и всего прочего - исходите из вопроса, какая будет нагрузка и сколько вы готовы отдать за хостинг или за улучшение кода.\r\n\r\n##FAQ\r\n\r\n###У меня есть идея/найденный баг/вопрос. Куда мне обратиться?\r\n\r\nДля этого есть [Issues](https://github.com/stleon/graffiti_map/issues). Изучите уже созданные, добавляйте свои, старайтесь использовать развернутое описание, чтобы можно было понять, чего вы хотите.\r\n\r\n##Что было сделано\r\n\r\n###Релиз 1.0.1\r\n\r\n- [x] Логотип Теплицы Социальных Технологий в футере\r\n- [x] Дополнения по установке на продакшн\r\n- [x] Унификация вывода формата координат\r\n- [x] Определение текущей гео-позиции\r\n- [x] Уведомление о возможности загрузки только **jpg**-изображений\r\n- [x] Новые категории граффити\r\n- [x] Отправка оповещений модераторам с ссылкой на администраторский интерфейс\r\n\r\n###Релиз 1.0.0\r\n\r\n- [x] Переход с Bottle на **Django**\r\n- [x] Настройка раздела администрирования\r\n- [x] Страница добавления граффити (карта и форма)\r\n- [x] Добавление **Google ReCaptcha** на форму добавления граффити\r\n- [x] API для чтения (get) информации о всех граффити\r\n- [x] Автоматически генерируемый **sitemap**\r\n- [x] Интеграция с [Mandrill](http://habrahabr.ru/post/256055/) для отправки уведомлений (если что-то поломалось и когда добавлены новые граффити)\r\n- [x] Отображение карты при в админке при добавлении/редактировании граффити\r\n- [x] Код вставки карты на свой сайт/блог\r\n- [x] Конвертация фото граффити в jpg с максимальной шириной 1024\r\n- [x] Легальные/Нелегальные граффити\r\n\r\n###Релиз 0.0.1\r\n\r\n![С хакатона](https://raw.githubusercontent.com/stleon/stleon.github.io/master/downloads/graffiti.png)\r\n\r\nЗа время хакатона реализовано:\r\n\r\n- Список граффити, сортируются по дате добавления\r\n- Страница граффити с комментариями от Disqus\r\n- Карта с кластеризацией на основе Yandex Maps API\r\n\r\nИспользовались:\r\n\r\n- Python 3\r\n- Bottle\r\n- Pony ORM\r\n- Bootstrap\r\n- Yandex Maps API\r\n\r\n##Пожертвования\r\n\r\n**graffiti_map** является результатом многочисленных часов работы энтузиастов. Проект некоммерческий и хостинг мы оплачиваем сами. Если вы оценили нашу работу, и вы хотите поддержать **graffiti_map**, пожалуйста, подумайте о [внесении пожертвований](http://yasobe.ru/na/graffiti_map).\r\n\r\n##Лицензия\r\n\r\nCopyright © 2015 by Tonkikh Lev Igorevich. All rights reserved.\r\n\r\nЭта программа является свободным программным обеспечением; вы можете распространять и/или изменять его в соответствии с условиями GNU General Public License, опубликованной Фондом свободного программного обеспечения, Версия 3 (или более поздней) с уточнениями и исключениями, описанными в файле лицензии. Это гарантирует ваше право использовать, модифицировать и распространять это программное обеспечение при определенных условиях.\r\n\r\nТакже желательно указывать ссылку на данный репозиторий.\r\n\r\n##Разработчики\r\n\r\n- [ST LEON](mailto:leonst998@gmail.com) ([@STLEON](https://twitter.com/inquisb))\r\n\r\n##\r\n","google":"UA-65036122-1","note":"Don't delete this file! It's used internally to help with page regeneration."}